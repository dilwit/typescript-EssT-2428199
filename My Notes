Ch01
- About type script
  - is superset of java script
  - enforce strong static typing, so that we can catch error compile time
  - better tooling
  - more for Human
  - 
  - To instal TypeScript
  - you need node.js (java script runtime) 
  - and npm (node package manager)
  - Verify by tsc -v
- Type script config files and it's attributes
- How to use java script in combination with type script, use type typescript configs to validate java scripts

Ch02
- Primitive and build-in types
- Custom type with interfaces and extending interfaces
  -- optional property => brithDate ?: Date;
- Types aliases
  -- Keyword is type
  -- type ContactName = string
  -- name : ContactName
- Enums
  -- enum ContactStatus {Active, InActive}
  -- status: ContactStatus.Active
- Type functions
  -- Inferred return typed: function doSomething(myContactDeatils) : Contact { return myContactDeatils;}
  -- Return type specified: function doSomething(myContactDeatils : Contact) : Contact { return myContactDeatils;}
  -- Function as variable: function doSomething(myContactDeatils : Contact, fuc: (source: Contact) => Contact) : Contact { return myContactDeatils;}
  -- Method in a interface: interface Contact {id: string, clone(name: string): Contact}
- MetaType as Generics
  -- function doSomething<T>(myContactDeatils : T) : T { return myContactDeatils;}
  -- function doSomething<T1, T2>(myContactDeatils : T1) : T2 { return myContactDeatils;}

Ch03
- Combine multiple types 


